(ns blog.pages
  (:require
   [clojure.string :as string]

   [blog.log :as log]
   [blog.config :as config]
   [blog.post :as post]
   [blog.markdown :as md]
   [blog.generate :as gen]
   ))
;; TODO add malli schemas to these page defs

;; vars/static data

(def sidebar-top-links
  "
* [Home](/)
* [About](/about.md)
* [Dev Logs](/devlogs/)
* [Portfolio](/portfolio/)
* [Posts](/posts/)")


(def sidebar-top-links-with-post-categories
  (str
    sidebar-top-links
    "
  * [100 word stories](/posts/100-worders/)
  * [Techsposure](/posts/techsposure/)
  * [Get It Write](/posts/getitwrite/)
  * [Groks](/posts/groks/)
"))


(defn write-sidebar
  [{:as   def
    title :title}]
  (cond-> def
    true
    (assoc :path "_sidebar.md")

    (nil? (:preamble def))
    (assoc :preamble
           (str sidebar-top-links
                (when title (str "\n\n--\n\n" title "\n\n"))))

    true
    (gen/write-page)))

(defn h1-text-link [post]
  (str "* " (md/post->md-text-link post)))

(defn write-index
  [{:as   def
    title :title}]
  (cond-> def
    true
    (assoc :path "README.md")

    (:posts-fn def)
    (assoc :posts (:posts-fn def))

    (nil? (:->text def))
    (assoc :->text h1-text-link)

    (nil? (:content def))
    (assoc :content (md/posts-index def))

    (nil? (:preamble def))
    (assoc :preamble (str "## " (or title " More Posts")))

    true
    (gen/write-page)))


;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; generating pages

(defn text-post-tags [post]
  (cond
    (string/includes? (:blog.post/fname post) "gloss") " #glossolalia"
    (#{"techsposure"} (:blog.post/parent-fname post))  " #techsposure"
    (#{"getitwrite"} (:blog.post/parent-fname post))   " #getitwrite"
    (#{"groks"} (:blog.post/parent-fname post))        " #groks"
    (#{"100-worders"} (:blog.post/parent-fname post))  " #hundos"))

(defn post->text-with-tags [post]
  (str "* " (md/post->md-text-link post)
       (text-post-tags post)))

(def devlog-page-defs
  ;; page defs are generated by passing the full map to the `:generate` function
  {:devlogs/sidebar
   {:generate      write-sidebar
    :directory     config/devlogs-dir
    :title         "Dev Logs"
    :->text        post->text-with-tags
    :skip-group-by true}

   :devlogs/index
   {:generate      write-index
    :directory     config/devlogs-dir
    :title         "Dev Logs"
    :->text        post->text-with-tags
    :skip-group-by true
    ;; TODO we could slurp-in the preamble, maybe up to a <!--- BLOG END PREAMBLE ---> comment?
    :preamble      (str "
## Dev Logs

Notes, clips, commits, etc collected along the dev path.
")}})


(def posts-page-defs
  {:posts/index
   {:generate  write-index
    :directory config/posts-dir
    :title     "Posts"
    :->posts   post/local-posts
    :->text    post->text-with-tags
    :preamble  (str "

## Posts

Blog posts from over the years.

Some broad categories:

* [100 word stories](/posts/100-worders/)
* [Get It Write](/posts/getitwrite/)
* [groks](/posts/groks/)
* [techsposure](/posts/techsposure/)

")}})

(def hundos-page-defs
  {:hundos/sidebar
   {:generate  write-sidebar
    :directory config/hundos-dir
    :preamble  sidebar-top-links-with-post-categories}

   :hundos/index
   {:generate  write-index
    :directory config/hundos-dir
    :preamble  (str "
## 100 Word Stories

Known colloquially as hundos.
")}})

(def techsposure-page-defs
  {:techsposure/sidebar
   {:generate  write-sidebar
    :directory config/techsposure-dir
    :title     "Techsposure"
    :preamble  sidebar-top-links-with-post-categories}

   :techsposure/index
   {:generate  write-index
    :directory config/techsposure-dir
    :title     "Techsposure"}})

(def getitwrite-page-defs
  {
   :getitwrite/sidebar
   {:generate  write-sidebar
    :directory config/getitwrite-dir
    :title     "Get It? Write!"
    :preamble  sidebar-top-links-with-post-categories
    }

   :getitwrite/index
   {:generate  write-index
    :directory config/getitwrite-dir
    :title     "Get It? Write!"
    }})

(def groks-page-defs
  {:groks/sidebar
   {:generate  write-sidebar
    :directory config/groks-dir
    :title     "GROKs"
    :preamble  sidebar-top-links-with-post-categories}

   :groks/index
   {:generate  write-index
    :directory config/groks-dir
    :title     "GROKs"
    :preamble  (str "
## GROKs

Notes and hopefully specific things I'm trying to understand better.
}")}})


(comment
  (write-index {:directory config/hundos-dir}))

(defn all-page-defs []
  (merge devlog-page-defs
         posts-page-defs
         hundos-page-defs
         techsposure-page-defs
         getitwrite-page-defs
         groks-page-defs)
  )

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; generators

(defn write-indexes-and-sidebars []
  (->> (all-page-defs)
       (map (fn [[id def]]
              (if-not (:generate def)
                (log/log "WARN no :generate on def" id)
                (do
                  (log/log "Generating def" id)
                  (cond-> def
                    (:->posts def) (assoc :posts ((:->posts def)))
                    true           ((:generate def) def))
                  ))))
       (doall)))
